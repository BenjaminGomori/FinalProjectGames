// <auto-generated />
using System;
using FinalProjectGames.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProjectGames.Migrations
{
    [DbContext(typeof(FinalProjectGamesContext))]
    [Migration("20220420000718_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProjectGames.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Play soccer with cars",
                            GameType = "Video",
                            GameTypeId = 0,
                            Name = "Rocket League",
                            Rating = 5
                        },
                        new
                        {
                            Id = 2,
                            Description = "Get rid of your cards before your opponents",
                            GameType = "Card",
                            GameTypeId = 0,
                            Name = "Uno",
                            Rating = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fight to the death with your favorite Kombatants",
                            GameType = "Video",
                            GameTypeId = 0,
                            Name = "Mortal Kombat",
                            Rating = 5
                        });
                });

            modelBuilder.Entity("FinalProjectGames.Models.GameType", b =>
                {
                    b.Property<int>("GameTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameTypeId");

                    b.ToTable("GameTypes");

                    b.HasData(
                        new
                        {
                            GameTypeId = 1,
                            Name = "Video"
                        },
                        new
                        {
                            GameTypeId = 2,
                            Name = "Board"
                        },
                        new
                        {
                            GameTypeId = 3,
                            Name = "Cards"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
